# Generated by Django 3.1.6 on 2021-02-12 23:13

import ccresponse.storage_backends
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Case',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('instruction_date', models.DateField(blank=True, null=True)),
                ('title', models.CharField(max_length=200)),
                ('date_of_accident', models.DateField()),
                ('time_of_accident', models.TimeField(blank=True, null=True)),
                ('location', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('ongoing', 'Ongoing'), ('payment_pack', 'Payment Pack'), ('settled', 'Settled')], default='ongoing', max_length=30)),
                ('priority', models.CharField(blank=True, choices=[('not_interested', 'Not Interested')], max_length=50, null=True)),
                ('finished_at', models.DateTimeField(blank=True, null=True)),
                ('hire_details', models.TextField(blank=True)),
                ('hire_validation', models.TextField(blank=True)),
                ('hire_settlement_details', models.TextField(blank=True)),
                ('recovery_details', models.TextField(blank=True)),
                ('recovery_settlement_details', models.TextField(blank=True)),
                ('storage_details', models.TextField(blank=True)),
                ('storage_settlement_details', models.TextField(blank=True)),
                ('clawback_details', models.TextField(blank=True)),
                ('weather', models.TextField(blank=True)),
                ('circumstances', models.TextField(blank=True)),
                ('payment_status', models.CharField(blank=True, max_length=200)),
                ('ack_comms', models.BooleanField(default=False)),
                ('other_info', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Chat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('whats_app', 'WhatsApp'), ('crm', 'CRM'), ('email', 'Email')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Template',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200, unique=True)),
                ('file', models.FileField(storage=ccresponse.storage_backends.PrivateMediaStorage(), upload_to='templates/')),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('vrn', models.CharField(max_length=100, unique=True)),
                ('make', models.CharField(max_length=200)),
                ('model', models.CharField(max_length=200)),
                ('date_purchased', models.DateField()),
                ('price_purchased', models.DecimalField(decimal_places=2, max_digits=15)),
                ('service_due', models.DateField()),
                ('tax_cost', models.DecimalField(decimal_places=2, max_digits=15)),
                ('tax_due', models.DateField()),
                ('mot_cost', models.DecimalField(decimal_places=2, max_digits=15)),
                ('mot_due', models.DateField()),
                ('notes', models.TextField(blank=True)),
                ('price_per_day', models.DecimalField(decimal_places=2, max_digits=15)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='address',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='user',
            name='avatar',
            field=models.ImageField(blank=True, null=True, storage=ccresponse.storage_backends.PrivateMediaStorage(), upload_to='avatars/'),
        ),
        migrations.AddField(
            model_name='user',
            name='company_name',
            field=models.CharField(blank=True, max_length=200),
        ),
        migrations.AddField(
            model_name='user',
            name='date_of_birth',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='introducer_fee',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='license_number',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name='user',
            name='ni_number',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name='user',
            name='other_details',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='user',
            name='phone_number',
            field=models.CharField(blank=True, max_length=50),
        ),
        migrations.AddField(
            model_name='user',
            name='policy_number',
            field=models.CharField(default=1, max_length=200),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='user',
            name='ref',
            field=models.CharField(blank=True, max_length=200),
        ),
        migrations.AddField(
            model_name='user',
            name='role',
            field=models.CharField(choices=[('customer', 'Customer'), ('insurer', 'Insurer'), ('introducer', 'Introducer'), ('solicitor', 'Solicitor'), ('worker', 'Worker')], default='customer', max_length=50),
        ),
        migrations.AddField(
            model_name='user',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('text', models.TextField()),
                ('is_seen', models.BooleanField(default=False)),
                ('worker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.TextField(blank=True)),
                ('message', models.TextField(blank=True)),
                ('sent_at', models.DateTimeField(default=datetime.datetime.now)),
                ('is_read', models.BooleanField(default=False)),
                ('chat', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='chat_messages', to='core.chat')),
                ('sender', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_messages', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('invoice_number', models.IntegerField()),
                ('settlement_status', models.CharField(blank=True, max_length=100)),
                ('settlement_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('invoice_date', models.DateField()),
                ('invoice_type', models.CharField(max_length=50)),
                ('date_paid', models.DateField()),
                ('file', models.FileField(blank=True, null=True, storage=ccresponse.storage_backends.PrivateMediaStorage(), upload_to='invoices/')),
                ('case', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invoices', to='core.case')),
            ],
        ),
        migrations.CreateModel(
            name='Injury',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200)),
                ('notes', models.TextField(blank=True)),
                ('status', models.CharField(blank=True, max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('finished_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('file', models.FileField(blank=True, null=True, storage=ccresponse.storage_backends.PrivateMediaStorage(), upload_to='injuries/')),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='injuries', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Injuries',
            },
        ),
        migrations.CreateModel(
            name='ExternalPartyService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dated_retained', models.DateField(blank=True, null=True)),
                ('instruction_date', models.DateField(blank=True, null=True)),
                ('follow_up', models.CharField(blank=True, max_length=100)),
                ('follow_up_date', models.DateField(blank=True, null=True)),
                ('introducer_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('notes', models.TextField(blank=True)),
                ('case', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='related_external_parties', to='core.case')),
                ('external_party', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='external_party_services', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(blank=True, max_length=200)),
                ('description', models.TextField()),
                ('cost', models.DecimalField(decimal_places=2, max_digits=15)),
                ('date', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
                ('vehicle', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='expenses', to='core.vehicle')),
            ],
        ),
        migrations.AddField(
            model_name='chat',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_chats', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='chat',
            name='worker',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='worker_chats', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='CaseNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('note', models.TextField()),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='case_notes', to='core.case')),
                ('worker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='worker_notes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='case',
            name='customer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='customer_cases', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='case',
            name='external_parties',
            field=models.ManyToManyField(related_name='external_party_cases', through='core.ExternalPartyService', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='case',
            name='vehicle',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vehicle_cases', to='core.vehicle'),
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('price_per_day', models.DecimalField(blank=True, decimal_places=2, max_digits=15)),
                ('notes', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_booking_latitude', models.CharField(blank=True, max_length=50)),
                ('start_booking_longitude', models.CharField(blank=True, max_length=50)),
                ('end_booking_latitude', models.CharField(blank=True, max_length=50)),
                ('end_booking_longitude', models.CharField(blank=True, max_length=50)),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='customer_bookings', to=settings.AUTH_USER_MODEL)),
                ('vehicle', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vehicle_bookings', to='core.vehicle')),
            ],
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('image', 'image'), ('video', 'video'), ('audio', 'audio')], max_length=30)),
                ('file', models.FileField(storage=ccresponse.storage_backends.PrivateMediaStorage(), upload_to='attachments/')),
                ('message', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='attachments', to='core.message')),
            ],
        ),
        migrations.AddConstraint(
            model_name='externalpartyservice',
            constraint=models.UniqueConstraint(fields=('external_party', 'case'), name='unique_service'),
        ),
        migrations.AddConstraint(
            model_name='chat',
            constraint=models.UniqueConstraint(fields=('worker', 'user', 'type'), name='unique_chat'),
        ),
    ]
