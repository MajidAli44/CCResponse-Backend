# Generated by Django 3.2.6 on 2021-08-17 12:26

import django.contrib.postgres.fields
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

from cases.models import UserDisplayCaseColumn
from core.models import User


def create_users_column():
    for user in User.objects.all():
        UserDisplayCaseColumn.objects.create(
            user=user,
            columns=list(UserDisplayCaseColumn.CaseColumns.values.keys())
        )


def reverse(apps):
    # pylint: disable=W0621
    UserDisplayCaseColumn = apps.get_model('cases', 'UserDisplayCaseColumn')
    UserDisplayCaseColumn.objects.all().delete()


class Migration(migrations.Migration):
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('cases', '0010_auto_20210812_1558'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserDisplayCaseColumn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('columns', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(
                    choices=[('instruction_date', 'Instruction date'), ('accident_date', 'Accident date'),
                             ('client_name', 'Client name'), ('phone_number', 'Phone number'),
                             ('introducer', 'Introducer'), ('notes', 'Notes'), ('status_notes', 'Status notes'),
                             ('instructed_solicitor', 'Instructed solicitor'), ('tp_insurer', 'Third party insurer')],
                    max_length=20), default=list, size=9)),
                (
                    'user',
                    models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        # TODO: Find out the reason for the exception
        # Stacktrace:
        # django.db.utils.ProgrammingError: relation "core_user" does not exist
        # LINE 1: ...r"."other_details", "core_user"."updated_at" FROM "core_user...
        # migrations.RunPython(create_users_column, reverse)
    ]
